# This playbook adds a set of snapshot schedules to one or more share_snapshots
# Note that the schedules must exist before trying to apply them
---
- hosts: localhost
  gather_facts: False
  vars_files:
  - Configs/anvil.yml
  vars:
    share_snapshots:
      {"schedule":{"name":"daily"},"share":{"name":"Devwork"},"retention":{"name":"7_years","uoid":null}}

  tasks:
  - name: Add snapshot schedule to share
    uri:
      url: "https://{{ data_cluster_mgmt_ip }}:8443/mgmt/v1.2/rest/share-snapshots"
      user: "{{ hsuser }}"
      password: "{{ password }}"
      method: POST
      body: '{{share_snapshots}}'
      force_basic_auth: yes
      status_code: 200
      body_format: json
      validate_certs: no
    register: schedule_status
    failed_when:
      - schedule_status.status == 500
# The next two tasks are only executed when the retention schedule already exists which means it effectively updates the retention time.
  - name: Update schedule - Get current information
    when: schedule_status.status == 400
    uri:
      url: "https://{{ data_cluster_mgmt_ip }}:8443/mgmt/v1.2/rest/share-snapshots?spec=schedule.name%3Deq%3D{{share_snapshots.schedule.name|urlencode }}&spec=share.name%3Deq%3D{{ share_snapshots.share.name|urlencode }}"
      user: "{{ hsuser }}"
      password: "{{ password }}"
      method: GET
      body: '{}'
      force_basic_auth: yes
      status_code: 200
      body_format: json
      validate_certs: no
    register: update_get
  - name: Update current snapshot schedule
    when: schedule_status.status == 400
    uri:
      url: "https://{{ data_cluster_mgmt_ip }}:8443/mgmt/v1.2/rest/share-snapshots/{{ share_snapshots.share.name|urlencode }}"
      user: "{{ hsuser }}"
      password: "{{ password }}"
      method: PUT
      body: '{{ update_get.json[0]|combine(share_snapshots,recursive=True) }}'
      force_basic_auth: yes
      status_code: 200
      body_format: json
      validate_certs: no
